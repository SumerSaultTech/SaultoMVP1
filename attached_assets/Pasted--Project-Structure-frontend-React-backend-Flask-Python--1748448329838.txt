### Project Structure
# frontend/ (React)
# backend/ (Flask + Python)

# ----------------------
# backend/app.py
# ----------------------
from flask import Flask, request, jsonify
import snowflake.connector
import os
from dotenv import load_dotenv
import re

load_dotenv()
app = Flask(__name__)

@app.route('/api/create-snowflake', methods=['POST'])
def create_snowflake_db():
    data = request.get_json()
    company_name = data.get('company_name', '')

    if not company_name:
        return jsonify({'message': 'Company name is required'}), 400

    sanitized = re.sub(r'[^a-zA-Z0-9_]', '_', company_name).upper()
    db_name = f'DB_{sanitized}'
    schema_name = f'SCHEMA_{sanitized}'

    try:
        conn = snowflake.connector.connect(
            user=os.getenv("SNOWFLAKE_USER"),
            password=os.getenv("SNOWFLAKE_PASSWORD"),
            account=os.getenv("SNOWFLAKE_ACCOUNT"),
            warehouse=os.getenv("SNOWFLAKE_WAREHOUSE"),
            role=os.getenv("SNOWFLAKE_ROLE")
        )

        cs = conn.cursor()
        cs.execute(f'CREATE DATABASE IF NOT EXISTS {db_name}')
        cs.execute(f'CREATE SCHEMA IF NOT EXISTS {db_name}.{schema_name}')
        cs.close()
        conn.close()

        return jsonify({'message': f'Database {db_name} and schema {schema_name} created successfully.'})

    except Exception as e:
        return jsonify({'message': f'Error: {str(e)}'}), 500

# ----------------------
# backend/.env
# ----------------------
# SNOWFLAKE_USER=your_user
# SNOWFLAKE_PASSWORD=your_password
# SNOWFLAKE_ACCOUNT=your_account_id
# SNOWFLAKE_WAREHOUSE=COMPUTE_WH
# SNOWFLAKE_ROLE=SYSADMIN

# ----------------------
# frontend/src/CreateDatabaseForm.jsx
# ----------------------
import { useState } from 'react';

export default function CreateDatabaseForm() {
  const [companyName, setCompanyName] = useState('');
  const [status, setStatus] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    setStatus("Creating...");

    try {
      const res = await fetch('/api/create-snowflake', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ company_name: companyName }),
      });

      const data = await res.json();
      setStatus(data.message);
    } catch (err) {
      setStatus("An error occurred.");
    }
  };

  return (
    <div className="max-w-md mx-auto p-6 shadow rounded-xl">
      <h2 className="text-xl font-semibold mb-4">Create Snowflake DB</h2>
      <form onSubmit={handleSubmit} className="space-y-4">
        <input
          type="text"
          value={companyName}
          onChange={(e) => setCompanyName(e.target.value)}
          placeholder="Company Name"
          className="w-full p-2 border rounded"
          required
        />
        <button
          type="submit"
          className="w-full bg-blue-600 text-white p-2 rounded"
        >
          Create
        </button>
      </form>
      {status && <p className="mt-4">{status}</p>}
    </div>
  );
}

# ----------------------
# frontend/package.json (partial)
# ----------------------
// Add this to enable proxy to Flask
"proxy": "http://localhost:5000",

# ----------------------
# Run Commands
# ----------------------
# Backend:
# cd backend
# python -m venv venv && source venv/bin/activate
# pip install flask snowflake-connector-python python-dotenv
# python app.py

# Frontend:
# cd frontend
# npm install
# npm start
